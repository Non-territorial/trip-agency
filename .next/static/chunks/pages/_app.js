/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./public/css/style.css":
/*!************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./public/css/style.css ***!
  \************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* General Reset */\\nbody, html {\\n    margin: 0;\\n    padding: 0;\\n    font-family: 'IBM Plex Mono', monospace;\\n    scroll-behavior: smooth;\\n    overflow-x: hidden;\\n    min-height: 100vh;\\n}\\n\\n/* Navbar */\\n.navbar {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 50px;\\n    background-color: rgba(0, 0, 0, 0.95);\\n    color: #fff;\\n    font-weight: 300;\\n    display: flex;\\n    justify-content: space-between; /* Space between left and right sections */\\n    align-items: center;\\n    padding: 0 150px; /* Reduced padding to allow more room */\\n    box-sizing: border-box; /* Ensure padding is included in total width */\\n    z-index: 1000;\\n}\\n\\n.navbar a {\\n    color: #fff;\\n    text-decoration: none;\\n    white-space: nowrap; /* Prevent wrapping */\\n}\\n\\n\\n.booking {\\n    color: rgba(255, 255, 255, 1); /* Ensure full opacity for the text */\\n    font-size: 1.1rem;\\n    font-weight: 300;\\n    white-space: nowrap;\\n    letter-spacing: 1px;\\n    border-radius: 25px; /* Rounded corners */\\n    border: 1px solid white; /* Define border width, style, and color */\\n    padding: 2px 35px; /* Add padding for button-like appearance */\\n    text-transform: uppercase; /* Optional: Make text uppercase */\\n    background: transparent; /* Optional: Ensure no background */\\n    cursor: pointer; /* Change cursor to pointer on hover */\\n    text-decoration: none; /* Remove underline for links */\\n}\\n\\n\\n.brand {\\n    font-size: 1.8rem; /* Base font size for the entire link */\\n    font-weight: normal;\\n    color: rgba(255, 255, 255);\\n    text-decoration: none;\\n}\\n\\n.agency {\\n    font-size: 0.8rem; /* Smaller font size for \\\"AGENCY\\\" */\\n    font-weight: normal; /* Adjust weight if needed */\\n    color: rgba(255, 255, 255); /* Optional: Different color for \\\"AGENCY\\\" */\\n}\\n\\n\\n/* Main App Container */\\n#app {\\n    margin-top: 60px; /* Prevent content from overlapping navbar */\\n}\\n\\n/* Vertical Sections */\\n.vertical-section {\\n    min-height: 100vh; /* Full screen height */\\n    padding: 40px;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    text-align: left;\\n    background: #f9f9f9;\\n    box-sizing: border-box;\\n}\\n\\n/* Video Sections */\\n.video-section {\\n    position: relative;\\n    width: 100%;\\n    height: 100vh; /* Full viewport height */\\n    overflow: hidden;\\n}\\n\\n#my-video {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    min-width: 100%;\\n    min-height: 100%;\\n    object-fit: cover; /* Ensures the video maintains aspect ratio */\\n    z-index: -1; /* Places the video behind any content */\\n}\\n\\n\\n.video-js .vjs-control-bar {\\n    display: none; /* Hides the control bar */\\n}\\n\\n\\n/* Styling for the Japanese text */\\n.jp-text {\\n    font-family: 'Noto Sans JP', sans-serif; \\n    font-size: 16px; /* Adjust size to match the desired appearance */\\n    color: rgba(0, 0, 0, 0.90); /* Gray color for subtle appearance */\\n    text-align: left; /* Align to left */\\n    display: block; /* Ensure it stays above the heading */\\n    margin-bottom: -20px;\\n}\\n\\n\\n\\n\\n.content-wrapper {\\n    display: flex;\\n    flex-direction: column; /* Stacks the children vertically */\\n    align-items: flex-start; /* Align content to the left */\\n    gap: none; /* Adds spacing between sections */\\n}\\n\\n.vertical-section-img {\\n    display: flex;\\n    align-items: flex-start; /* Align the items at the top */\\n    gap: 20px; /* Add spacing between image and text */\\n    padding: 40px;\\n    max-width: 1200px; /* Limit the section's width */\\n    margin: 0 auto; /* Center align the section */\\n    box-sizing: border-box;\\n}\\n\\n.image-container {\\n    flex: 1 1; /* Allocate space proportionally */\\n    max-width: 50%; /* Restrict image container to half the width */\\n}\\n\\n.image-container img {\\n    width: 100%; /* Make the image responsive */\\n    height: auto; /* Maintain aspect ratio */\\n    object-fit: cover; /* Crop or resize gracefully */\\n    border-radius: 5px; /* Optional: Add rounded corners */\\n}\\n\\n\\n\\n.heading {\\n    font-family: 'IBM Plex Mono', monospace; /* Ensure consistent font */\\n    font-size: 2.5rem; /* Larger heading size */\\n    font-weight: 700;\\n    margin-bottom: 20px;\\n}\\n\\n.description {\\n    font-family: 'IBM Plex Mono', monospace; /* Ensure consistent font */\\n    font-size: 22px;\\n    line-height: 1.4; /* Adjust for better readability */\\n    max-width: 550px;\\n}\\n.room {\\n    position: relative; /* Makes the section a containing block */\\n    height: 100vh; /* Full viewport height */\\n    width: 100%; /* Full viewport width */\\n    color: white; /* Text color */\\n    background-image: url('https://gateway.pinata.cloud/ipfs/bafybeiaob6p3sygp5asch6zzrhmuuvbczgsc7j4rk5tbw2iwfmo2tj2jke');\\n    background-size: cover; /* Ensures the image covers the entire section */\\n    background-position: center; /* Centers the image */\\n    background-repeat: no-repeat; /* Prevents the image from repeating */\\n    display: flex; /* Enables flexbox for content alignment */\\n    justify-content: flex-start; /* Aligns content to the left */\\n    align-items: flex-end; /* Aligns content to the bottom */\\n    padding: 40px; /* Adds padding around the text */\\n    z-index: 1; /* Ensures the section layers correctly */\\n}\\n\\n.text-block {\\n    margin-bottom: 80px; /* Adjust the space above the menu button */\\n    margin-left: 20px; /* Ensures some space from the left */\\n    font-family: 'IBM Plex Mono', monospace; /* Ensure consistent font */\\n    text-align: left; /* Align text to the left */\\n}\\n\\n.title1 {\\n    font-size: 1.2rem; /* Small title size */\\n    font-weight: 400;\\n    text-transform: uppercase;\\n    margin-bottom: -20px;\\n}\\n\\n.heading1 {\\n    font-size: 2.5rem; /* Larger heading size */\\n    font-weight: 700;\\n    margin-bottom: 5px;\\n}\\n\\n.description1 {\\n    font-size: 1.1rem;\\n    line-height: 1.4; /* Adjust for better readability */\\n}\\n\\n.monteverde {\\n    position: relative; /* Ensures the section is a containing block for positioned elements */\\n    height: 100vh; /* Full viewport height */\\n    width: 100%; /* Full width of the viewport */\\n    display: flex; /* Enables flexbox for centering content */\\n    justify-content: center; /* Horizontally centers the content */\\n    align-items: center; /* Vertically centers the content */\\n    color: white; /* Text color */\\n    background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),  \\n    url('https://gateway.pinata.cloud/ipfs/bafybeifwo6255tgipknzbblcub7k63tvcbzsyjwqjobye3gka7v5yo56uu');\\n    background-size: cover; /* Ensures the image covers the entire section */\\n    background-position: center; /* Centers the image */\\n    background-repeat: no-repeat; /* Prevents the image from repeating */\\n    z-index: 1; /* Ensures this section layers correctly */\\n    text-align: left; /* Align text to the left */\\n    padding: 40px; /* Adds padding around text */\\n    opacity: 0.98;\\n}\\n\\n.title {\\n    font-family: 'IBM Plex Mono', monospace; /* Ensure consistent font */\\n    font-size: 1.2rem; /* Small title size */\\n    font-weight: 400;\\n    text-transform: uppercase;\\n    margin-bottom: -20px;\\n}\\n.cuisine {\\n    position: relative; /* Ensures the section is a containing block for positioned elements */\\n    height: 100vh; /* Full viewport height */\\n    width: 100%; /* Full width of the viewport */\\n    display: flex; /* Enables flexbox for centering content */\\n    justify-content: center; /* Horizontally centers the content */\\n    align-items: center; /* Vertically centers the content */\\n    color: white; /* Text color */\\n    background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),  \\n    url('https://gateway.pinata.cloud/ipfs/bafybeih5cbdbpuatv4b3lczzft2t2xcbps7itnsbr2hd3q2rue3mp2uroy');\\n    background-size: cover; /* Ensures the image covers the entire section */\\n    background-position: center; /* Centers the image */\\n    background-repeat: no-repeat; /* Prevents the image from repeating */\\n    z-index: 1; /* Ensures this section layers correctly */\\n    text-align: left; /* Align text to the left */\\n    padding: 40px; /* Adds padding around text */\\n    opacity: 0.98;\\n}\\n\\n.details-block {\\n    flex: 1 1; /* Allocate space proportionally */\\n    font-family: 'IBM Plex Mono', monospace; /* Consistent font */\\n    padding: 20px; /* Add padding around the text */\\n    background-color: #fff; /* Optional: Add a background color */\\n    \\n}\\n\\n.details-heading {\\n    font-size: 1rem;\\n    font-weight: bold;\\n    text-transform: uppercase;\\n    margin-bottom: 10px;\\n}\\n\\n.details-title {\\n    font-size: 2rem;\\n    font-weight: bold;\\n    margin-bottom: 20px;\\n}\\n\\n.details-item {\\n    display: flex;\\n    justify-content: space-between;\\n    padding: 5px 0;\\n    border-bottom: 1px solid #000;\\n}\\n\\n.details-label {\\n    font-size: 1rem;\\n    font-weight: bold;\\n    flex: 1 1;\\n}\\n\\n.details-value {\\n    font-size: 1rem;\\n    font-weight: normal;\\n    text-align: right;\\n    flex: 1 1;\\n}\\n\\n.details-info {\\n    display: block; /* Ensure it fills the width of the container */\\n    font-size: 1rem;\\n    font-weight: normal;\\n    text-align: justify; /* Justify the text for a clean look */\\n    width: 100%; /* Fills the parent container */\\n    line-height: 1.5; /* Adds line spacing */\\n    padding: 10px 0; /* Adds spacing above and below */\\n    box-sizing: border-box; /* Includes padding in total width */\\n}\\n\\n\\n\\n.info-section {\\n    position: relative; /* Proper containment for child elements */\\n    height: 110vh; \\n    width: 100%; /* Full width of the viewport */\\n    display: flex; /* Enables flexbox for layout */\\n    justify-content: center; \\n    align-items: center;\\n    flex-direction: column; /* Stacks items in a single column */\\n    color: black; /* Text color */\\n    background-color: white; /* Solid white background */\\n    background-size: cover;\\n    text-align: center; /* Aligns text to the left */\\n    padding: 10px; /* Padding around the section */\\n    font-weight: 300; /* Light font weight for content */\\n}\\n\\n.info-item {\\n    width: 100%; /* Ensures full-width items */\\n    padding: 0;\\n    border-bottom: 1px solid #000;\\n    margin: 0;\\n}\\n\\n.info-item h3 {\\n    font-size: 16px;\\n    color: black; /* Text color for headers */\\n    font-weight: 300;\\n    cursor: pointer; /* Indicates interactivity for dropdown */\\n    text-align: left;\\n}\\n\\n.dropdown-toggle span {\\n    font-weight: normal;\\n    margin-left: 5px;\\n    color: black;\\n}\\n\\n.info-item-content {\\n    display: none; /* Content is hidden initially */\\n    padding: 10px 0;\\n    transition: all 0.3s ease-in-out; /* Smooth dropdown animation */\\n    margin-top: 10px; /* Spacing between header and content */\\n    font-size: 14px; /* Font size for content */\\n    color: black; /* Content text color */\\n    text-align: left;\\n    margin-bottom: 16px; /* Adjust this value for the desired spacing */\\n    line-height: 1.4; /* Optional: Adjust line spacing for better readability */\\n}\\n.info-item-content.show {\\n    display: block;\\n}\\n\\n.p2 {\\n    font-size: 14px;\\n    text-align: left;\\n    position: absolute;\\n    left: 20px; /* Adjust this value to move it closer to the left edge */\\n    bottom: 20px; /* Adjust this value to position it vertically */\\n    margin: 0;\\n    padding: 0;\\n}\\n\\n.contact {\\n    position: relative;\\n    width: 100%;\\n    min-height: 100vh; /* Ensures full viewport height */\\n    display: flex;\\n    flex-direction: column; /* Stack items vertically */\\n    align-items: center; /* Horizontally center all content */\\n    justify-content: center; /* Vertically center all content */\\n    color: white;\\n    background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),  \\n        url('https://gateway.pinata.cloud/ipfs/bafybeihvjjbyhw3minhh7xky6ojmq2hpvmcsdqdl7drb7zzwhlgc4cucb4');\\n    background-size: cover; /* Ensures the image covers the entire section */\\n    background-position: center; /* Centers the image */\\n    background-repeat: no-repeat; /* Prevents the image from repeating */\\n    padding: 40px 20px; /* Adds spacing around the content */\\n    text-align: center; /* Center text within the section */\\n}\\n\\n.contact .content-wrapper {\\n    display: flex;\\n    flex-direction: column; /* Stack sections vertically */\\n    gap: 40px; /* Space between Contact Us and Newsletter sections */\\n    width: 100%; /* Full width */\\n    max-width: 800px; /* Optional: limit the width for better readability */\\n}\\n\\n.contact .contact-us,\\n.contact .newsletter {\\n    width: 100%; /* Full width of the container */\\n    margin: 0 auto; /* Center horizontally */\\n}\\n\\n.contact .contact-us {\\n    text-align: left; /* Align Contact Us content to the left */\\n}\\n\\n.contact .newsletter {\\n    text-align: center; /* Align Newsletter content to the center */\\n}\\n\\n\\n.newsletter-section {\\n    width: 100%; /* Ensures it aligns with the width of the contact block */\\n    max-width: none; /* Overrides the max-width */\\n    margin-top: 10px; /* Reduce spacing between sections */\\n    font-size: 22px;\\n    color: rgba(255, 255, 255, 0.9);\\n}\\n\\n\\n.inquiry {\\n    color: white;\\n    text-decoration: none;\\n}\\n\\n.newsletter-section h2 {\\n    font-size: 38px;\\n    color: rgba(255, 255, 255);\\n    margin-bottom: 40px;\\n}\\n\\n.newsletter-section form {\\n    display: flex;\\n    justify-content: center; /* Center input and button */\\n    gap: 10px; /* Space between input and button */\\n}\\n\\n.newsletter-section input {\\n    width: 70%;\\n    padding: 8px;\\n    font-size: 16px;\\n    background-color: #000;\\n    border-radius: 25px;\\n    color: rgba(255, 255, 255, 0.9);\\n}\\n\\n.newsletter-section button {\\n    padding: 5px 10px;\\n    font-size: 1rem;\\n    color: #fff;\\n    background-color: black;\\n    border: 1px solid white;\\n    border-radius: 25px;\\n    cursor: pointer;\\n}\\n\\n#form-message {\\n    margin-top: 10px;\\n    font-size: 22px;\\n    color: rgb(227, 166, 23);\\n}\\n\\n.newsletter-section input:focus,\\n.newsletter-section textarea:focus {\\n    outline: none; /* Remove default outline */\\n    box-shadow: 0 0 5px rgb(249, 192, 21); /* Add custom focus effect */\\n    border: 1px rgb(249, 192, 21); /* Add yellow border */\\n}\\n\\n\\n/* Bottom Navbar */\\n.bottom-navbar {\\n    position: fixed;\\n    bottom: 0; /* Aligns the navbar to the bottom of the page */\\n    left: 0;\\n    width: 100%; /* Full width */\\n    height: 60px; /* Navbar height */\\n    background-color: rgba(0, 0, 0, 0.95); /* Matching the top navbar background */\\n    display: flex;\\n    justify-content: flex-end; /* Aligns the menu trigger to the right */\\n    align-items: center; /* Centers the trigger vertically */\\n    z-index: 999; /* Ensures it stays above most elements */\\n  }\\n\\n/* Bottom Menu Container */\\n.bottom-menu {\\n    position: fixed;\\n    bottom: 0;\\n    left: 0;\\n    width: 100%;\\n    background: #000; /* Black background */\\n    color: #fff;\\n    padding: 10px 20px;\\n    z-index: 1000;\\n    box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.2);\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n}\\n\\n/* Trigger Button */\\n.menu-trigger {\\n    display: flex;\\n    flex-direction: column; /* Stack the spans vertically */\\n    justify-content: space-evenly;\\n    align-items: center; /* Center the spans horizontally */\\n    width: 40px; /* Adjust the button size */\\n    height: 40px; /* Keep it circular */\\n    background-color: black; /* Black background */\\n    border: 1px solid white;\\n    border-radius: 50%; /* Make it circular */\\n    position: fixed; /* Fixed position */\\n    bottom: 10px; /* Adjust position above the bottom bar */\\n    right: 20px; /* Distance from the right edge */\\n    z-index: 1000; /* Ensure it's above other content */\\n    cursor: pointer; /* Add a pointer cursor */\\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.3); /* Add a shadow for better visibility */\\n}\\n\\n.menu-trigger span {\\n    display: block;\\n    width: 20px; /* Length of each line */\\n    height: 3px; /* Thickness of each line */\\n    background-color: white; /* White color for lines */\\n    border-radius: 2px; /* Rounded edges for better aesthetics */\\n    transition: all 0.3s ease; /* Smooth animations on hover or click */\\n}\\n/* Menu Content */\\n.menu-content {\\n    display: none; /* Hidden by default */\\n    flex-direction: column;\\n    position: absolute;\\n    bottom: 65px; /* Position above the bottom menu */\\n    right: 50px; /* Aligns with padding of the bottom menu */\\n    border: 1px solid white;\\n    background: rgba(0, 0, 0, 0.95); /* Dropdown background */\\n    padding: 10px;\\n    border-radius: 5px;\\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\\n    z-index: 1001;\\n}\\n\\n.menu-content a {\\n    text-decoration: none;\\n    color: #fff;\\n    margin: 5px 0;\\n    font-size: 1.2rem;\\n    transition: color 0.3s;\\n    font-weight: normal;\\n}\\n\\n.menu-content a:hover {\\n    color: #ffcc00; /* Highlight on hover */\\n}\\n\\n.email-link {\\n    color: black; /* White color for the email link */\\n    text-decoration: none; /* Removes underline */\\n    font-family: 'IBM Plex Mono', monospace; /* Matches other text styling */\\n    font-size: 1.2rem; /* Slightly larger font size for visibility */\\n    font-weight: 700; /* Normal weight */\\n   \\n    display: inline-block; /* Ensures proper spacing */\\n}\\n\\n.email-link:hover {\\n    text-decoration: underline; /* Adds underline on hover */\\n    color: #070707; /* Light gray color on hover */\\n}\\n\\n.terms-content {\\n    margin: 100px auto; /* Adds spacing from the navbar */\\n    max-width: 800px; /* Limit content width for readability */\\n    line-height: 1.6; /* Improves text readability */\\n    color: #333; /* Text color */\\n    font-family: 'IBM Plex Mono', monospace; /* Consistent font */\\n    text-align: left;\\n}\\n\\n.terms-content h1 {\\n    font-size: 30px;\\n    margin-bottom: 20px;\\n}\\n\\n.terms-content h2 {\\n    font-size: 20px;\\n    margin-top: 40px;\\n    \\n    \\n}\\n\\n.terms-content p {\\n    font-size: 16px;\\n    margin-bottom: 20px;\\n}\\n\\n\\n\\n\\n\\n\\n.book-section {\\n    background-color: black;\\n    border-radius: 15px;\\n    padding: 20px;\\n    width: cover;\\n    height: 1000px;\\n    margin: 0 auto;\\n    color: rgba(255, 255, 255, 0.9);\\n    font-family: 'IBM Plex Mono', monospace;\\n}\\n\\n.book-section h2 {\\n    font-size: 30px;\\n    margin: 50px 0 10px;\\n    text-align: center;\\n    color: rgba(255, 255, 255);\\n}\\n\\n.book-section p {\\n    text-align: center;\\n    color: rgba(255, 255, 255, 0.7);\\n    font-family: 'IBM Plex Mono', monospace;\\n}\\n\\n.book-form {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 25px;\\n    align-items: center;\\n    margin: 50px 0;\\n}\\n\\n.book-section input, .book-section textarea {\\n    width: 100%;\\n    max-width: 400px;\\n    padding: 10px;\\n    font-size: 16px;\\n    background-color: #000;\\n    border-radius: 25px;\\n    color: rgba(255, 255, 255, 0.9);\\n    border: 1px solid rgba(255, 255, 255, 0.7);\\n    font-family: 'IBM Plex Mono', monospace;\\n}\\n\\n.book-section textarea {\\n    height: 120px;\\n}\\n\\n.book-section button {\\n    padding: 12px 25px;\\n    font-size: 1rem;\\n    color: #fff;\\n    background-color: black;\\n    border: 1px solid white;\\n    border-radius: 25px;\\n    cursor: pointer;\\n}\\n\\n.book-section button:hover {\\n    background-color: rgba(255, 255, 255, 0.1);\\n}\\n\\n.book-section input:focus,\\n.book-section textarea:focus {\\n    outline: none; /* Remove default outline */\\n    box-shadow: 0 0 5px rgb(241, 183, 9); /* Add custom focus effect */\\n    border: 1px rgb(241, 183, 9); /* Add yellow border */\\n}\\n\\n#form-message {\\n    font-size: 16px;\\n    color: rgba(255, 255, 255, 0.7);\\n    margin-top: 10px;\\n}\\n\\n/* Remove spinner arrows from number input */\\ninput[type=\\\"number\\\"]::-webkit-inner-spin-button,\\ninput[type=\\\"number\\\"]::-webkit-outer-spin-button {\\n    -webkit-appearance: none; /* Remove the spinner for webkit browsers */\\n    margin: 0; /* Prevent any layout shifting */\\n}\\n\\ninput[type=\\\"number\\\"] {\\n    -moz-appearance: textfield; /* Remove spinner for Firefox */\\n    \\n}\\n\\n\\n\\n\\n/* General Mobile Adjustments */\\n@media (max-width: 600px) {\\n\\n    html, body {\\n        scroll-behavior: smooth; /* Enables smooth scrolling */\\n        overflow-x: hidden; /* Prevents horizontal scrolling */\\n        -webkit-overflow-scrolling: touch; /* Enables momentum-based scrolling for iOS */\\n    }\\n\\n    /* Navbar */\\n    .navbar {\\n        height: 40px; /* Adjust height for smaller screens */\\n        flex-direction: row; /* Keep the row layout */\\n        padding: 15px; /* Reduce padding */\\n    }\\n\\n    .brand {\\n        font-size: 1.2rem; /* Adjust size for mobile */\\n    }\\n\\n    .agency {\\n        font-size: 0.7rem;\\n    }\\n\\n    .booking {\\n        font-size: 0.8rem; /* Adjust size */\\n        padding: 3px 15px; /* Adjust padding */\\n        margin-bottom: 20px;\\n    }\\n\\n    /* Vertical Sections */\\n    .vertical-section {\\n        padding: 20px;\\n        text-align: center;\\n    }\\n\\n    /* Video Sections */\\n    .video-section {\\n        position: relative;\\n        width: 100%;\\n        height: 100vh; /* Full height of the viewport */\\n        overflow: hidden; /* Hide any overflowing parts of the video */\\n    }\\n\\n    #my-video {\\n        position: absolute;\\n        top: 50%;\\n        left: 50%;\\n        transform: translate(-50%, -50%); /* Center the video */\\n        width: 100%; /* Fill the entire width */\\n        height: 100%; /* Fill the entire height */\\n        object-fit: cover; /* Ensure the video covers the container */\\n    }\\n\\n    .jp-text {\\n        font-size: 14px; /* Slightly smaller font size for mobile */\\n        text-align: left; /* Align Japanese text to the left */\\n        margin-bottom: -20px; /* Reduce space between Japanese text and heading */\\n        \\n    }\\n\\n    .content-wrapper {\\n        padding: 15px; /* Add padding for better spacing on smaller screens */\\n    }\\n\\n    .heading {\\n        font-size: 1.8rem; /* Slightly smaller heading size for mobile */\\n        margin-bottom: 10px; /* Reduce spacing below the heading */\\n        text-align: left; /* Align heading to the left */\\n    }\\n\\n    .description {\\n        font-size: 16px; /* Reduce font size for better readability */\\n        line-height: 1.5; /* Adjust line spacing */\\n        max-width: 100%; /* Allow full width for content on smaller screens */\\n        text-align: left; /* Align description to the left */\\n        margin-top: 10px; /* Add some space above the description */\\n    }\\n    /* Room Section */\\n    .room {\\n        position: relative; /* Ensure proper containment for positioned elements */\\n        display: flex;\\n        justify-content: flex-start; /* Align items to the left */\\n        align-items: flex-end; /* Align items to the bottom */\\n        height: 100vh; /* Full viewport height */\\n        padding: 20px; /* Add some padding around */\\n        color: white; /* Ensure text is visible */\\n        background-size: cover; /* Cover the background */\\n        background-position: center; /* Center the background */\\n        background-repeat: no-repeat; /* Prevent tiling */\\n    }\\n    \\n    .text-block {\\n        position: absolute; /* Position it within the .room */\\n        bottom: -10px; /* Add spacing from the bottom */\\n        left: -15px; /* Add spacing from the left */\\n        text-align: left; /* Align text to the left */\\n        background: rgba(0, 0, 0, 0.4); /* Optional: Semi-transparent background */\\n        padding: 5px; /* Padding for better readability */\\n        border-radius: 8px; /* Add rounded corners for aesthetics */\\n    }\\n    \\n    .title1 {\\n        font-size: 0.7rem;\\n        margin-bottom: -10px; /* Small spacing between title and heading */\\n    }\\n    \\n    .heading1 {\\n        font-size: 1.3rem;\\n        margin-bottom: 5px; /* Small spacing below heading */\\n    }\\n    \\n    .description1 {\\n        font-size: 0.6rem;\\n        line-height: 1.4; /* Improve readability */\\n    }\\n    \\n\\n    /* Monteverde, Cuisine Section */\\n    .monteverde {\\n        display: flex; /* Ensure flexbox layout */\\n        flex-direction: column; /* Stack items vertically */\\n        justify-content: flex-start; /* Align content to the top */\\n        align-items: flex-start; /* Align items to the left */\\n        text-align: left; /* Align text content to the left */\\n        padding: 10px; /* Add padding for spacing */\\n        height: 500px; \\n        background-size: cover; /* Cover the background */\\n        background-position: center; /* Center the background */\\n        background-repeat: no-repeat; /* Prevent tiling */\\n    }\\n\\n    .cuisine {\\n        padding: 10px;\\n    }\\n\\n    /* Trips Section */\\n\\n    .vertical-section-img {\\n        display: flex;\\n        flex-direction: column; /* Stack image and details vertically */\\n        gap: 20px; /* Remove spacing between elements */\\n        padding: 0; /* Remove padding */\\n    }\\n\\n    .image-container {\\n        width: 100%; /* Full width for mobile */\\n        max-width: none; /* Remove max-width limit */\\n        padding: 0; /* Remove padding */\\n    }\\n\\n    .image-container img {\\n        width: 100%; /* Make the image span full width */\\n        height: auto; /* Maintain aspect ratio */\\n        object-fit: cover; /* Ensure the image fits well */\\n        border-radius: 0; /* Remove rounded corners */\\n    }\\n\\n    .details-block {\\n        width: 100%; /* Full width for the details block */\\n        padding: 15px; /* Add padding for spacing */\\n        background-color: #fff; /* Keep a white background */\\n        box-sizing: border-box; /* Include padding in total width */\\n    }\\n\\n    .details-heading {\\n        font-size: 0.8rem; /* Adjust font size for headings */\\n        text-align: center; /* Center-align headings */\\n        margin-bottom: 10px; /* Add spacing below heading */\\n    }\\n\\n    .details-title {\\n        font-size: 1.6rem; /* Adjust title size for better fit */\\n        text-align: center; /* Center-align the title */\\n        margin-bottom: 10px; /* Add spacing below the title */\\n    }\\n\\n    .details-item {\\n        display: flex;\\n        justify-content: space-between; /* Ensure label and value are at opposite ends */\\n        text-align: left; /* Align text to the left */\\n        padding: 10px 0; /* Add spacing between items */\\n        border-bottom: 1px solid #ccc; /* Light border for separation */\\n    }\\n\\n    .details-label {\\n        font-size: 0.8rem; /* Adjust label font size */\\n        font-weight: bold; /* Keep font weight normal */\\n        text-align: left; /* Align label text to the left */\\n        flex: 1 1; /* Allow the label to take available space */\\n        padding-right: 10px; /* Add spacing between label and value */\\n    }\\n\\n    .details-value {\\n        font-size: 0.8rem; /* Adjust value font size */\\n        font-weight: normal; /* Highlight value text with bold */\\n        text-align: right; /* Align value text to the right */\\n        flex: 1 1; /* Allow the value to take available space */\\n        padding-left: 10px; /* Add spacing between label and value */\\n    }\\n    .details-info {\\n        font-size: 0.7rem; /* Adjust text size for readability */\\n        text-align: justify; /* Justify text for a cleaner look */\\n        line-height: 1.5; /* Enhance line spacing */\\n        padding-top: 10px; /* Add spacing above the text */\\n    }\\n\\n    /* Info Section */\\n    .info-section {\\n        padding: 0;\\n        height: auto; /* Adjust height for smaller screens */\\n        text-align: left; /* Align all content to the left */\\n    }\\n    \\n    .info-item {\\n        width: 90%; /* Maintain responsiveness */\\n        margin: 10px auto;\\n        text-align: left; /* Align each item to the left */\\n        border-bottom: 1px solid #000; /* Optional: keep separation consistent */\\n    }\\n    \\n    .info-item h3 {\\n        font-size: 0.8rem;\\n        text-align: left; /* Align header text to the left */\\n        margin: 5px 0; /* Add slight spacing above and below */\\n    }\\n    \\n    .dropdown-toggle span {\\n        font-size: 1rem;\\n        text-align: left; /* Align icon to the left, if necessary */\\n    }\\n    \\n    .info-item-content {\\n        font-size: 0.9rem;\\n        text-align: left; /* Align dropdown content to the left */\\n        margin-top: 5px; /* Add slight spacing between items */\\n    }\\n\\n    /* Contact Section */\\n    .contact {\\n        display: flex;\\n        flex-direction: column; /* Stack elements vertically */\\n        padding: 5px;\\n        text-align: left; /* Center-align text */\\n        gap: 10px; /* Add spacing between elements */\\n    }\\n    \\n    .contact h2 {\\n        font-size: 22px; /* Slightly smaller heading for mobile */\\n        margin-bottom: 10px; /* Add space below the heading */\\n    }\\n    \\n    .contact p {\\n        font-size: 14px; /* Adjust font size for better readability */\\n        margin-bottom: 5px;\\n    }\\n    \\n    .contact a {\\n        font-size: 14px;\\n        color: #fff; /* Ensure high contrast for the email link */\\n        text-decoration: none;\\n        word-break: break-word; /* Allow email to wrap if needed */\\n    }\\n    \\n    /* Newsletter Section */\\n    .newsletter-section {\\n        display: flex;\\n        flex-direction: column; /* Stack elements vertically */\\n        padding: 5px;\\n        text-align: left; /* Center-align text */\\n        gap: 10px; /* Add spacing between elements */\\n    }\\n    \\n    \\n    .newsletter-section h2 {\\n        font-size: 24px; /* Smaller heading for mobile */\\n        margin-bottom: 10px;\\n        text-align: left;\\n    }\\n    \\n    .newsletter-section form {\\n        display: flex;\\n        flex-direction: column; /* Stack form elements */\\n        align-items: left;\\n        width: 100%; /* Ensure form spans the section width */\\n        gap: 10px; /* Add spacing between input and button */\\n    }\\n    \\n    .newsletter-section input {\\n        width: 80%; /* Take most of the width for input */\\n        font-size: 12px; /* Adjust font size */\\n        padding: 10px; /* Add padding for touch-friendly inputs */\\n        border-radius: 25px; /* Keep rounded look */\\n        border: 1px solid #fff; /* Ensure visible border */\\n    }\\n    \\n    .newsletter-section button {\\n        width: 87%; /* Match input width */\\n        font-size: 12px; /* Adjust font size */\\n        padding: 8px; /* Add padding for touch-friendly button */\\n        border-radius: 25px; /* Keep rounded look */\\n        background-color: black; /* Ensure contrast */\\n        color: white;\\n        border: 1px solid #fff;\\n    }\\n    \\n    .newsletter-section button:hover {\\n        background-color: #fff;\\n        color: black;\\n    }\\n\\n    /* Book Section */\\n    .book-section {\\n        width: 90%;\\n        padding: 15px;\\n        background-color: #000;\\n    }\\n\\n    .book-section h2 {\\n        font-size: 24px;\\n        margin: 20px 0;\\n    }\\n\\n    .book-section input, .book-section textarea {\\n        font-size: 14px;\\n        padding: 8px;\\n    }\\n\\n    .book-section button {\\n        width: 100%; /* Full width button */\\n        font-size: 0.9rem;\\n    }\\n\\n    #form-message {\\n        font-size: 0.9rem;\\n    }\\n    .bottom-navbar {\\n        height: 40px; /* Reduce height for mobile */\\n        padding: 0 10px; /* Smaller padding */\\n        justify-content: space-between; /* Space out content */\\n    }\\n    \\n    /* Adjust trigger button for smaller viewports */\\n    .menu-trigger {\\n        width: 30px; /* Reduce size */\\n        height: 30px;\\n        bottom: 3px; /* Adjust placement */\\n        right: 10px;\\n    }\\n    \\n    .menu-trigger span {\\n        width: 17px; /* Reduce line length */\\n        height: 1.8px; /* Reduce line thickness */\\n    }\\n    \\n    /* Dropdown menu adjustments */\\n    .menu-content {\\n        bottom: 40px; /* Position it above the navbar */\\n        right: 45px; /* Align to the trigger */\\n        padding: 5px; /* Adjust padding */\\n        font-size: 14px; /* Smaller font size */\\n        max-width: 30%; /* Prevent dropdown from exceeding screen width */\\n    }\\n    \\n    .menu-content a {\\n        font-size: 14px !important;\\n        margin: 5px 0; /* Add spacing between links */\\n        text-align: center; /* Center-align text */\\n        text-decoration: none;\\n        color: #fff;\\n        transition: color 0.3s;\\n        font-weight: normal;\\n    }\\n    \\n    .menu-content a:hover {\\n        color: #ffcc00; /* Highlight on hover */\\n    }\\n    \\n    .p2 {\\n        font-size: 10px;\\n        text-align: left;\\n        position: absolute;\\n        left: 5px; /* Adjust this value to move it closer to the left edge */\\n        bottom: 13px;\\n    \\n    }\\n    /* Terms and Conditions */\\n\\n    .email-link {\\n        font-size: 1rem; /* Smaller font size for visibility */\\n    }\\n\\n    .terms-content {\\n        margin: 20px; /* Reduce margin for smaller screens */\\n        max-width: 100%; /* Use full width for better readability */\\n        line-height: 1.5; /* Slightly tighter line spacing */\\n        font-size: 14px; /* Smaller font size for mobile screens */\\n        text-align: justify; /* Align text to make it more visually pleasing */\\n    }\\n\\n    .terms-content h1 {\\n        font-size: 24px; /* Reduce size of main heading */\\n        margin-bottom: 15px;\\n    }\\n\\n    .terms-content h2 {\\n        font-size: 18px; /* Reduce size of subheadings */\\n        margin-top: 30px;\\n    }\\n\\n    .terms-content p {\\n        font-size: 14px; /* Adjust paragraph font size */\\n        margin-bottom: 15px; /* Reduce spacing between paragraphs */\\n    }\\n\\n\\n    @media (min-width: 768px) and (max-width: 1024px) {\\n        /* Adjusted CSS for tablet layout */\\n    \\n        /* Navbar */\\n        .navbar {\\n            display: flex;\\n            justify-content: space-between;\\n            padding: 0 20px;\\n        }\\n    \\n        /* Align \\\"Trip Agency\\\" and \\\"Book\\\" */\\n        .navbar .logo {\\n            margin-left: 10px;\\n        }\\n    \\n        .navbar .book-button {\\n            margin-right: 10px;\\n        }\\n    \\n        /* Details Section */\\n        .details-section {\\n            display: flex;\\n            flex-direction: row;\\n            gap: 20px;\\n            padding: 20px;\\n            max-width: 90%;\\n            margin: 0 auto;\\n        }\\n    \\n        .details-section .image-container img {\\n            width: 100%;\\n            height: auto;\\n            max-width: 50%;\\n            border-radius: 10px;\\n        }\\n    \\n        .details-section .details-block {\\n            flex: 1 1;\\n            font-size: 1rem;\\n            padding: 10px;\\n        }\\n    \\n        /* Adjusting grid alignment for details */\\n        .details-block .details-item {\\n            display: grid;\\n            grid-template-columns: 1fr 2fr;\\n            grid-gap: 10px;\\n            gap: 10px;\\n            padding: 5px 0;\\n        }\\n    \\n        .details-item .details-label {\\n            text-align: left;\\n            font-weight: bold;\\n        }\\n    \\n        .details-item .details-value {\\n            text-align: right;\\n        }\\n    }\\n    \\n    \\n    }\\n\\n\\n\\n\\n\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://public/css/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* General Reset */\\nbody, html {\\n    margin: 0;\\n    padding: 0;\\n    font-family: 'IBM Plex Mono', monospace;\\n    scroll-behavior: smooth;\\n    overflow-x: hidden;\\n    min-height: 100vh;\\n}\\n\\n/* Navbar */\\n.navbar {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 50px;\\n    background-color: rgba(0, 0, 0, 0.95);\\n    color: #fff;\\n    font-weight: 300;\\n    display: flex;\\n    justify-content: space-between; /* Space between left and right sections */\\n    align-items: center;\\n    padding: 0 150px; /* Reduced padding to allow more room */\\n    box-sizing: border-box; /* Ensure padding is included in total width */\\n    z-index: 1000;\\n}\\n\\n.navbar a {\\n    color: #fff;\\n    text-decoration: none;\\n    white-space: nowrap; /* Prevent wrapping */\\n}\\n\\n\\n.booking {\\n    color: rgba(255, 255, 255, 1); /* Ensure full opacity for the text */\\n    font-size: 1.1rem;\\n    font-weight: 300;\\n    white-space: nowrap;\\n    letter-spacing: 1px;\\n    border-radius: 25px; /* Rounded corners */\\n    border: 1px solid white; /* Define border width, style, and color */\\n    padding: 2px 35px; /* Add padding for button-like appearance */\\n    text-transform: uppercase; /* Optional: Make text uppercase */\\n    background: transparent; /* Optional: Ensure no background */\\n    cursor: pointer; /* Change cursor to pointer on hover */\\n    text-decoration: none; /* Remove underline for links */\\n}\\n\\n\\n.brand {\\n    font-size: 1.8rem; /* Base font size for the entire link */\\n    font-weight: normal;\\n    color: rgba(255, 255, 255);\\n    text-decoration: none;\\n}\\n\\n.agency {\\n    font-size: 0.8rem; /* Smaller font size for \\\"AGENCY\\\" */\\n    font-weight: normal; /* Adjust weight if needed */\\n    color: rgba(255, 255, 255); /* Optional: Different color for \\\"AGENCY\\\" */\\n}\\n\\n\\n/* Main App Container */\\n#app {\\n    margin-top: 60px; /* Prevent content from overlapping navbar */\\n}\\n\\n/* Vertical Sections */\\n.vertical-section {\\n    min-height: 100vh; /* Full screen height */\\n    padding: 40px;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    text-align: left;\\n    background: #f9f9f9;\\n    box-sizing: border-box;\\n}\\n\\n/* Video Sections */\\n.video-section {\\n    position: relative;\\n    width: 100%;\\n    height: 100vh; /* Full viewport height */\\n    overflow: hidden;\\n}\\n\\n#my-video {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    min-width: 100%;\\n    min-height: 100%;\\n    object-fit: cover; /* Ensures the video maintains aspect ratio */\\n    z-index: -1; /* Places the video behind any content */\\n}\\n\\n\\n.video-js .vjs-control-bar {\\n    display: none; /* Hides the control bar */\\n}\\n\\n\\n/* Styling for the Japanese text */\\n.jp-text {\\n    font-family: 'Noto Sans JP', sans-serif; \\n    font-size: 16px; /* Adjust size to match the desired appearance */\\n    color: rgba(0, 0, 0, 0.90); /* Gray color for subtle appearance */\\n    text-align: left; /* Align to left */\\n    display: block; /* Ensure it stays above the heading */\\n    margin-bottom: -20px;\\n}\\n\\n\\n\\n\\n.content-wrapper {\\n    display: flex;\\n    flex-direction: column; /* Stacks the children vertically */\\n    align-items: flex-start; /* Align content to the left */\\n    gap: none; /* Adds spacing between sections */\\n}\\n\\n.vertical-section-img {\\n    display: flex;\\n    align-items: flex-start; /* Align the items at the top */\\n    gap: 20px; /* Add spacing between image and text */\\n    padding: 40px;\\n    max-width: 1200px; /* Limit the section's width */\\n    margin: 0 auto; /* Center align the section */\\n    box-sizing: border-box;\\n}\\n\\n.image-container {\\n    flex: 1; /* Allocate space proportionally */\\n    max-width: 50%; /* Restrict image container to half the width */\\n}\\n\\n.image-container img {\\n    width: 100%; /* Make the image responsive */\\n    height: auto; /* Maintain aspect ratio */\\n    object-fit: cover; /* Crop or resize gracefully */\\n    border-radius: 5px; /* Optional: Add rounded corners */\\n}\\n\\n\\n\\n.heading {\\n    font-family: 'IBM Plex Mono', monospace; /* Ensure consistent font */\\n    font-size: 2.5rem; /* Larger heading size */\\n    font-weight: 700;\\n    margin-bottom: 20px;\\n}\\n\\n.description {\\n    font-family: 'IBM Plex Mono', monospace; /* Ensure consistent font */\\n    font-size: 22px;\\n    line-height: 1.4; /* Adjust for better readability */\\n    max-width: 550px;\\n}\\n.room {\\n    position: relative; /* Makes the section a containing block */\\n    height: 100vh; /* Full viewport height */\\n    width: 100%; /* Full viewport width */\\n    color: white; /* Text color */\\n    background-image: url('https://gateway.pinata.cloud/ipfs/bafybeiaob6p3sygp5asch6zzrhmuuvbczgsc7j4rk5tbw2iwfmo2tj2jke');\\n    background-size: cover; /* Ensures the image covers the entire section */\\n    background-position: center; /* Centers the image */\\n    background-repeat: no-repeat; /* Prevents the image from repeating */\\n    display: flex; /* Enables flexbox for content alignment */\\n    justify-content: flex-start; /* Aligns content to the left */\\n    align-items: flex-end; /* Aligns content to the bottom */\\n    padding: 40px; /* Adds padding around the text */\\n    z-index: 1; /* Ensures the section layers correctly */\\n}\\n\\n.text-block {\\n    margin-bottom: 80px; /* Adjust the space above the menu button */\\n    margin-left: 20px; /* Ensures some space from the left */\\n    font-family: 'IBM Plex Mono', monospace; /* Ensure consistent font */\\n    text-align: left; /* Align text to the left */\\n}\\n\\n.title1 {\\n    font-size: 1.2rem; /* Small title size */\\n    font-weight: 400;\\n    text-transform: uppercase;\\n    margin-bottom: -20px;\\n}\\n\\n.heading1 {\\n    font-size: 2.5rem; /* Larger heading size */\\n    font-weight: 700;\\n    margin-bottom: 5px;\\n}\\n\\n.description1 {\\n    font-size: 1.1rem;\\n    line-height: 1.4; /* Adjust for better readability */\\n}\\n\\n.monteverde {\\n    position: relative; /* Ensures the section is a containing block for positioned elements */\\n    height: 100vh; /* Full viewport height */\\n    width: 100%; /* Full width of the viewport */\\n    display: flex; /* Enables flexbox for centering content */\\n    justify-content: center; /* Horizontally centers the content */\\n    align-items: center; /* Vertically centers the content */\\n    color: white; /* Text color */\\n    background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),  \\n    url('https://gateway.pinata.cloud/ipfs/bafybeifwo6255tgipknzbblcub7k63tvcbzsyjwqjobye3gka7v5yo56uu');\\n    background-size: cover; /* Ensures the image covers the entire section */\\n    background-position: center; /* Centers the image */\\n    background-repeat: no-repeat; /* Prevents the image from repeating */\\n    z-index: 1; /* Ensures this section layers correctly */\\n    text-align: left; /* Align text to the left */\\n    padding: 40px; /* Adds padding around text */\\n    opacity: 0.98;\\n}\\n\\n.title {\\n    font-family: 'IBM Plex Mono', monospace; /* Ensure consistent font */\\n    font-size: 1.2rem; /* Small title size */\\n    font-weight: 400;\\n    text-transform: uppercase;\\n    margin-bottom: -20px;\\n}\\n.cuisine {\\n    position: relative; /* Ensures the section is a containing block for positioned elements */\\n    height: 100vh; /* Full viewport height */\\n    width: 100%; /* Full width of the viewport */\\n    display: flex; /* Enables flexbox for centering content */\\n    justify-content: center; /* Horizontally centers the content */\\n    align-items: center; /* Vertically centers the content */\\n    color: white; /* Text color */\\n    background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),  \\n    url('https://gateway.pinata.cloud/ipfs/bafybeih5cbdbpuatv4b3lczzft2t2xcbps7itnsbr2hd3q2rue3mp2uroy');\\n    background-size: cover; /* Ensures the image covers the entire section */\\n    background-position: center; /* Centers the image */\\n    background-repeat: no-repeat; /* Prevents the image from repeating */\\n    z-index: 1; /* Ensures this section layers correctly */\\n    text-align: left; /* Align text to the left */\\n    padding: 40px; /* Adds padding around text */\\n    opacity: 0.98;\\n}\\n\\n.details-block {\\n    flex: 1; /* Allocate space proportionally */\\n    font-family: 'IBM Plex Mono', monospace; /* Consistent font */\\n    padding: 20px; /* Add padding around the text */\\n    background-color: #fff; /* Optional: Add a background color */\\n    \\n}\\n\\n.details-heading {\\n    font-size: 1rem;\\n    font-weight: bold;\\n    text-transform: uppercase;\\n    margin-bottom: 10px;\\n}\\n\\n.details-title {\\n    font-size: 2rem;\\n    font-weight: bold;\\n    margin-bottom: 20px;\\n}\\n\\n.details-item {\\n    display: flex;\\n    justify-content: space-between;\\n    padding: 5px 0;\\n    border-bottom: 1px solid #000;\\n}\\n\\n.details-label {\\n    font-size: 1rem;\\n    font-weight: bold;\\n    flex: 1;\\n}\\n\\n.details-value {\\n    font-size: 1rem;\\n    font-weight: normal;\\n    text-align: right;\\n    flex: 1;\\n}\\n\\n.details-info {\\n    display: block; /* Ensure it fills the width of the container */\\n    font-size: 1rem;\\n    font-weight: normal;\\n    text-align: justify; /* Justify the text for a clean look */\\n    width: 100%; /* Fills the parent container */\\n    line-height: 1.5; /* Adds line spacing */\\n    padding: 10px 0; /* Adds spacing above and below */\\n    box-sizing: border-box; /* Includes padding in total width */\\n}\\n\\n\\n\\n.info-section {\\n    position: relative; /* Proper containment for child elements */\\n    height: 110vh; \\n    width: 100%; /* Full width of the viewport */\\n    display: flex; /* Enables flexbox for layout */\\n    justify-content: center; \\n    align-items: center;\\n    flex-direction: column; /* Stacks items in a single column */\\n    color: black; /* Text color */\\n    background-color: white; /* Solid white background */\\n    background-size: cover;\\n    text-align: center; /* Aligns text to the left */\\n    padding: 10px; /* Padding around the section */\\n    font-weight: 300; /* Light font weight for content */\\n}\\n\\n.info-item {\\n    width: 100%; /* Ensures full-width items */\\n    padding: 0;\\n    border-bottom: 1px solid #000;\\n    margin: 0;\\n}\\n\\n.info-item h3 {\\n    font-size: 16px;\\n    color: black; /* Text color for headers */\\n    font-weight: 300;\\n    cursor: pointer; /* Indicates interactivity for dropdown */\\n    text-align: left;\\n}\\n\\n.dropdown-toggle span {\\n    font-weight: normal;\\n    margin-left: 5px;\\n    color: black;\\n}\\n\\n.info-item-content {\\n    display: none; /* Content is hidden initially */\\n    padding: 10px 0;\\n    transition: all 0.3s ease-in-out; /* Smooth dropdown animation */\\n    margin-top: 10px; /* Spacing between header and content */\\n    font-size: 14px; /* Font size for content */\\n    color: black; /* Content text color */\\n    text-align: left;\\n    margin-bottom: 16px; /* Adjust this value for the desired spacing */\\n    line-height: 1.4; /* Optional: Adjust line spacing for better readability */\\n}\\n.info-item-content.show {\\n    display: block;\\n}\\n\\n.p2 {\\n    font-size: 14px;\\n    text-align: left;\\n    position: absolute;\\n    left: 20px; /* Adjust this value to move it closer to the left edge */\\n    bottom: 20px; /* Adjust this value to position it vertically */\\n    margin: 0;\\n    padding: 0;\\n}\\n\\n.contact {\\n    position: relative;\\n    width: 100%;\\n    min-height: 100vh; /* Ensures full viewport height */\\n    display: flex;\\n    flex-direction: column; /* Stack items vertically */\\n    align-items: center; /* Horizontally center all content */\\n    justify-content: center; /* Vertically center all content */\\n    color: white;\\n    background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),  \\n        url('https://gateway.pinata.cloud/ipfs/bafybeihvjjbyhw3minhh7xky6ojmq2hpvmcsdqdl7drb7zzwhlgc4cucb4');\\n    background-size: cover; /* Ensures the image covers the entire section */\\n    background-position: center; /* Centers the image */\\n    background-repeat: no-repeat; /* Prevents the image from repeating */\\n    padding: 40px 20px; /* Adds spacing around the content */\\n    text-align: center; /* Center text within the section */\\n}\\n\\n.contact .content-wrapper {\\n    display: flex;\\n    flex-direction: column; /* Stack sections vertically */\\n    gap: 40px; /* Space between Contact Us and Newsletter sections */\\n    width: 100%; /* Full width */\\n    max-width: 800px; /* Optional: limit the width for better readability */\\n}\\n\\n.contact .contact-us,\\n.contact .newsletter {\\n    width: 100%; /* Full width of the container */\\n    margin: 0 auto; /* Center horizontally */\\n}\\n\\n.contact .contact-us {\\n    text-align: left; /* Align Contact Us content to the left */\\n}\\n\\n.contact .newsletter {\\n    text-align: center; /* Align Newsletter content to the center */\\n}\\n\\n\\n.newsletter-section {\\n    width: 100%; /* Ensures it aligns with the width of the contact block */\\n    max-width: none; /* Overrides the max-width */\\n    margin-top: 10px; /* Reduce spacing between sections */\\n    font-size: 22px;\\n    color: rgba(255, 255, 255, 0.9);\\n}\\n\\n\\n.inquiry {\\n    color: white;\\n    text-decoration: none;\\n}\\n\\n.newsletter-section h2 {\\n    font-size: 38px;\\n    color: rgba(255, 255, 255);\\n    margin-bottom: 40px;\\n}\\n\\n.newsletter-section form {\\n    display: flex;\\n    justify-content: center; /* Center input and button */\\n    gap: 10px; /* Space between input and button */\\n}\\n\\n.newsletter-section input {\\n    width: 70%;\\n    padding: 8px;\\n    font-size: 16px;\\n    background-color: #000;\\n    border-radius: 25px;\\n    color: rgba(255, 255, 255, 0.9);\\n}\\n\\n.newsletter-section button {\\n    padding: 5px 10px;\\n    font-size: 1rem;\\n    color: #fff;\\n    background-color: black;\\n    border: 1px solid white;\\n    border-radius: 25px;\\n    cursor: pointer;\\n}\\n\\n#form-message {\\n    margin-top: 10px;\\n    font-size: 22px;\\n    color: rgb(227, 166, 23);\\n}\\n\\n.newsletter-section input:focus,\\n.newsletter-section textarea:focus {\\n    outline: none; /* Remove default outline */\\n    box-shadow: 0 0 5px rgb(249, 192, 21); /* Add custom focus effect */\\n    border: 1px rgb(249, 192, 21); /* Add yellow border */\\n}\\n\\n\\n/* Bottom Navbar */\\n.bottom-navbar {\\n    position: fixed;\\n    bottom: 0; /* Aligns the navbar to the bottom of the page */\\n    left: 0;\\n    width: 100%; /* Full width */\\n    height: 60px; /* Navbar height */\\n    background-color: rgba(0, 0, 0, 0.95); /* Matching the top navbar background */\\n    display: flex;\\n    justify-content: flex-end; /* Aligns the menu trigger to the right */\\n    align-items: center; /* Centers the trigger vertically */\\n    z-index: 999; /* Ensures it stays above most elements */\\n  }\\n\\n/* Bottom Menu Container */\\n.bottom-menu {\\n    position: fixed;\\n    bottom: 0;\\n    left: 0;\\n    width: 100%;\\n    background: #000; /* Black background */\\n    color: #fff;\\n    padding: 10px 20px;\\n    z-index: 1000;\\n    box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.2);\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n}\\n\\n/* Trigger Button */\\n.menu-trigger {\\n    display: flex;\\n    flex-direction: column; /* Stack the spans vertically */\\n    justify-content: space-evenly;\\n    align-items: center; /* Center the spans horizontally */\\n    width: 40px; /* Adjust the button size */\\n    height: 40px; /* Keep it circular */\\n    background-color: black; /* Black background */\\n    border: 1px solid white;\\n    border-radius: 50%; /* Make it circular */\\n    position: fixed; /* Fixed position */\\n    bottom: 10px; /* Adjust position above the bottom bar */\\n    right: 20px; /* Distance from the right edge */\\n    z-index: 1000; /* Ensure it's above other content */\\n    cursor: pointer; /* Add a pointer cursor */\\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.3); /* Add a shadow for better visibility */\\n}\\n\\n.menu-trigger span {\\n    display: block;\\n    width: 20px; /* Length of each line */\\n    height: 3px; /* Thickness of each line */\\n    background-color: white; /* White color for lines */\\n    border-radius: 2px; /* Rounded edges for better aesthetics */\\n    transition: all 0.3s ease; /* Smooth animations on hover or click */\\n}\\n/* Menu Content */\\n.menu-content {\\n    display: none; /* Hidden by default */\\n    flex-direction: column;\\n    position: absolute;\\n    bottom: 65px; /* Position above the bottom menu */\\n    right: 50px; /* Aligns with padding of the bottom menu */\\n    border: 1px solid white;\\n    background: rgba(0, 0, 0, 0.95); /* Dropdown background */\\n    padding: 10px;\\n    border-radius: 5px;\\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\\n    z-index: 1001;\\n}\\n\\n.menu-content a {\\n    text-decoration: none;\\n    color: #fff;\\n    margin: 5px 0;\\n    font-size: 1.2rem;\\n    transition: color 0.3s;\\n    font-weight: normal;\\n}\\n\\n.menu-content a:hover {\\n    color: #ffcc00; /* Highlight on hover */\\n}\\n\\n.email-link {\\n    color: black; /* White color for the email link */\\n    text-decoration: none; /* Removes underline */\\n    font-family: 'IBM Plex Mono', monospace; /* Matches other text styling */\\n    font-size: 1.2rem; /* Slightly larger font size for visibility */\\n    font-weight: 700; /* Normal weight */\\n   \\n    display: inline-block; /* Ensures proper spacing */\\n}\\n\\n.email-link:hover {\\n    text-decoration: underline; /* Adds underline on hover */\\n    color: #070707; /* Light gray color on hover */\\n}\\n\\n.terms-content {\\n    margin: 100px auto; /* Adds spacing from the navbar */\\n    max-width: 800px; /* Limit content width for readability */\\n    line-height: 1.6; /* Improves text readability */\\n    color: #333; /* Text color */\\n    font-family: 'IBM Plex Mono', monospace; /* Consistent font */\\n    text-align: left;\\n}\\n\\n.terms-content h1 {\\n    font-size: 30px;\\n    margin-bottom: 20px;\\n}\\n\\n.terms-content h2 {\\n    font-size: 20px;\\n    margin-top: 40px;\\n    \\n    \\n}\\n\\n.terms-content p {\\n    font-size: 16px;\\n    margin-bottom: 20px;\\n}\\n\\n\\n\\n\\n\\n\\n.book-section {\\n    background-color: black;\\n    border-radius: 15px;\\n    padding: 20px;\\n    width: cover;\\n    height: 1000px;\\n    margin: 0 auto;\\n    color: rgba(255, 255, 255, 0.9);\\n    font-family: 'IBM Plex Mono', monospace;\\n}\\n\\n.book-section h2 {\\n    font-size: 30px;\\n    margin: 50px 0 10px;\\n    text-align: center;\\n    color: rgba(255, 255, 255);\\n}\\n\\n.book-section p {\\n    text-align: center;\\n    color: rgba(255, 255, 255, 0.7);\\n    font-family: 'IBM Plex Mono', monospace;\\n}\\n\\n.book-form {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 25px;\\n    align-items: center;\\n    margin: 50px 0;\\n}\\n\\n.book-section input, .book-section textarea {\\n    width: 100%;\\n    max-width: 400px;\\n    padding: 10px;\\n    font-size: 16px;\\n    background-color: #000;\\n    border-radius: 25px;\\n    color: rgba(255, 255, 255, 0.9);\\n    border: 1px solid rgba(255, 255, 255, 0.7);\\n    font-family: 'IBM Plex Mono', monospace;\\n}\\n\\n.book-section textarea {\\n    height: 120px;\\n}\\n\\n.book-section button {\\n    padding: 12px 25px;\\n    font-size: 1rem;\\n    color: #fff;\\n    background-color: black;\\n    border: 1px solid white;\\n    border-radius: 25px;\\n    cursor: pointer;\\n}\\n\\n.book-section button:hover {\\n    background-color: rgba(255, 255, 255, 0.1);\\n}\\n\\n.book-section input:focus,\\n.book-section textarea:focus {\\n    outline: none; /* Remove default outline */\\n    box-shadow: 0 0 5px rgb(241, 183, 9); /* Add custom focus effect */\\n    border: 1px rgb(241, 183, 9); /* Add yellow border */\\n}\\n\\n#form-message {\\n    font-size: 16px;\\n    color: rgba(255, 255, 255, 0.7);\\n    margin-top: 10px;\\n}\\n\\n/* Remove spinner arrows from number input */\\ninput[type=\\\"number\\\"]::-webkit-inner-spin-button,\\ninput[type=\\\"number\\\"]::-webkit-outer-spin-button {\\n    -webkit-appearance: none; /* Remove the spinner for webkit browsers */\\n    margin: 0; /* Prevent any layout shifting */\\n}\\n\\ninput[type=\\\"number\\\"] {\\n    -moz-appearance: textfield; /* Remove spinner for Firefox */\\n    \\n}\\n\\n\\n\\n\\n/* General Mobile Adjustments */\\n@media (max-width: 600px) {\\n\\n    html, body {\\n        scroll-behavior: smooth; /* Enables smooth scrolling */\\n        overflow-x: hidden; /* Prevents horizontal scrolling */\\n        -webkit-overflow-scrolling: touch; /* Enables momentum-based scrolling for iOS */\\n    }\\n\\n    /* Navbar */\\n    .navbar {\\n        height: 40px; /* Adjust height for smaller screens */\\n        flex-direction: row; /* Keep the row layout */\\n        padding: 15px; /* Reduce padding */\\n    }\\n\\n    .brand {\\n        font-size: 1.2rem; /* Adjust size for mobile */\\n    }\\n\\n    .agency {\\n        font-size: 0.7rem;\\n    }\\n\\n    .booking {\\n        font-size: 0.8rem; /* Adjust size */\\n        padding: 3px 15px; /* Adjust padding */\\n        margin-bottom: 20px;\\n    }\\n\\n    /* Vertical Sections */\\n    .vertical-section {\\n        padding: 20px;\\n        text-align: center;\\n    }\\n\\n    /* Video Sections */\\n    .video-section {\\n        position: relative;\\n        width: 100%;\\n        height: 100vh; /* Full height of the viewport */\\n        overflow: hidden; /* Hide any overflowing parts of the video */\\n    }\\n\\n    #my-video {\\n        position: absolute;\\n        top: 50%;\\n        left: 50%;\\n        transform: translate(-50%, -50%); /* Center the video */\\n        width: 100%; /* Fill the entire width */\\n        height: 100%; /* Fill the entire height */\\n        object-fit: cover; /* Ensure the video covers the container */\\n    }\\n\\n    .jp-text {\\n        font-size: 14px; /* Slightly smaller font size for mobile */\\n        text-align: left; /* Align Japanese text to the left */\\n        margin-bottom: -20px; /* Reduce space between Japanese text and heading */\\n        \\n    }\\n\\n    .content-wrapper {\\n        padding: 15px; /* Add padding for better spacing on smaller screens */\\n    }\\n\\n    .heading {\\n        font-size: 1.8rem; /* Slightly smaller heading size for mobile */\\n        margin-bottom: 10px; /* Reduce spacing below the heading */\\n        text-align: left; /* Align heading to the left */\\n    }\\n\\n    .description {\\n        font-size: 16px; /* Reduce font size for better readability */\\n        line-height: 1.5; /* Adjust line spacing */\\n        max-width: 100%; /* Allow full width for content on smaller screens */\\n        text-align: left; /* Align description to the left */\\n        margin-top: 10px; /* Add some space above the description */\\n    }\\n    /* Room Section */\\n    .room {\\n        position: relative; /* Ensure proper containment for positioned elements */\\n        display: flex;\\n        justify-content: flex-start; /* Align items to the left */\\n        align-items: flex-end; /* Align items to the bottom */\\n        height: 100vh; /* Full viewport height */\\n        padding: 20px; /* Add some padding around */\\n        color: white; /* Ensure text is visible */\\n        background-size: cover; /* Cover the background */\\n        background-position: center; /* Center the background */\\n        background-repeat: no-repeat; /* Prevent tiling */\\n    }\\n    \\n    .text-block {\\n        position: absolute; /* Position it within the .room */\\n        bottom: -10px; /* Add spacing from the bottom */\\n        left: -15px; /* Add spacing from the left */\\n        text-align: left; /* Align text to the left */\\n        background: rgba(0, 0, 0, 0.4); /* Optional: Semi-transparent background */\\n        padding: 5px; /* Padding for better readability */\\n        border-radius: 8px; /* Add rounded corners for aesthetics */\\n    }\\n    \\n    .title1 {\\n        font-size: 0.7rem;\\n        margin-bottom: -10px; /* Small spacing between title and heading */\\n    }\\n    \\n    .heading1 {\\n        font-size: 1.3rem;\\n        margin-bottom: 5px; /* Small spacing below heading */\\n    }\\n    \\n    .description1 {\\n        font-size: 0.6rem;\\n        line-height: 1.4; /* Improve readability */\\n    }\\n    \\n\\n    /* Monteverde, Cuisine Section */\\n    .monteverde {\\n        display: flex; /* Ensure flexbox layout */\\n        flex-direction: column; /* Stack items vertically */\\n        justify-content: flex-start; /* Align content to the top */\\n        align-items: flex-start; /* Align items to the left */\\n        text-align: left; /* Align text content to the left */\\n        padding: 10px; /* Add padding for spacing */\\n        height: 500px; \\n        background-size: cover; /* Cover the background */\\n        background-position: center; /* Center the background */\\n        background-repeat: no-repeat; /* Prevent tiling */\\n    }\\n\\n    .cuisine {\\n        padding: 10px;\\n    }\\n\\n    /* Trips Section */\\n\\n    .vertical-section-img {\\n        display: flex;\\n        flex-direction: column; /* Stack image and details vertically */\\n        gap: 20px; /* Remove spacing between elements */\\n        padding: 0; /* Remove padding */\\n    }\\n\\n    .image-container {\\n        width: 100%; /* Full width for mobile */\\n        max-width: none; /* Remove max-width limit */\\n        padding: 0; /* Remove padding */\\n    }\\n\\n    .image-container img {\\n        width: 100%; /* Make the image span full width */\\n        height: auto; /* Maintain aspect ratio */\\n        object-fit: cover; /* Ensure the image fits well */\\n        border-radius: 0; /* Remove rounded corners */\\n    }\\n\\n    .details-block {\\n        width: 100%; /* Full width for the details block */\\n        padding: 15px; /* Add padding for spacing */\\n        background-color: #fff; /* Keep a white background */\\n        box-sizing: border-box; /* Include padding in total width */\\n    }\\n\\n    .details-heading {\\n        font-size: 0.8rem; /* Adjust font size for headings */\\n        text-align: center; /* Center-align headings */\\n        margin-bottom: 10px; /* Add spacing below heading */\\n    }\\n\\n    .details-title {\\n        font-size: 1.6rem; /* Adjust title size for better fit */\\n        text-align: center; /* Center-align the title */\\n        margin-bottom: 10px; /* Add spacing below the title */\\n    }\\n\\n    .details-item {\\n        display: flex;\\n        justify-content: space-between; /* Ensure label and value are at opposite ends */\\n        text-align: left; /* Align text to the left */\\n        padding: 10px 0; /* Add spacing between items */\\n        border-bottom: 1px solid #ccc; /* Light border for separation */\\n    }\\n\\n    .details-label {\\n        font-size: 0.8rem; /* Adjust label font size */\\n        font-weight: bold; /* Keep font weight normal */\\n        text-align: left; /* Align label text to the left */\\n        flex: 1; /* Allow the label to take available space */\\n        padding-right: 10px; /* Add spacing between label and value */\\n    }\\n\\n    .details-value {\\n        font-size: 0.8rem; /* Adjust value font size */\\n        font-weight: normal; /* Highlight value text with bold */\\n        text-align: right; /* Align value text to the right */\\n        flex: 1; /* Allow the value to take available space */\\n        padding-left: 10px; /* Add spacing between label and value */\\n    }\\n    .details-info {\\n        font-size: 0.7rem; /* Adjust text size for readability */\\n        text-align: justify; /* Justify text for a cleaner look */\\n        line-height: 1.5; /* Enhance line spacing */\\n        padding-top: 10px; /* Add spacing above the text */\\n    }\\n\\n    /* Info Section */\\n    .info-section {\\n        padding: 0;\\n        height: auto; /* Adjust height for smaller screens */\\n        text-align: left; /* Align all content to the left */\\n    }\\n    \\n    .info-item {\\n        width: 90%; /* Maintain responsiveness */\\n        margin: 10px auto;\\n        text-align: left; /* Align each item to the left */\\n        border-bottom: 1px solid #000; /* Optional: keep separation consistent */\\n    }\\n    \\n    .info-item h3 {\\n        font-size: 0.8rem;\\n        text-align: left; /* Align header text to the left */\\n        margin: 5px 0; /* Add slight spacing above and below */\\n    }\\n    \\n    .dropdown-toggle span {\\n        font-size: 1rem;\\n        text-align: left; /* Align icon to the left, if necessary */\\n    }\\n    \\n    .info-item-content {\\n        font-size: 0.9rem;\\n        text-align: left; /* Align dropdown content to the left */\\n        margin-top: 5px; /* Add slight spacing between items */\\n    }\\n\\n    /* Contact Section */\\n    .contact {\\n        display: flex;\\n        flex-direction: column; /* Stack elements vertically */\\n        padding: 5px;\\n        text-align: left; /* Center-align text */\\n        gap: 10px; /* Add spacing between elements */\\n    }\\n    \\n    .contact h2 {\\n        font-size: 22px; /* Slightly smaller heading for mobile */\\n        margin-bottom: 10px; /* Add space below the heading */\\n    }\\n    \\n    .contact p {\\n        font-size: 14px; /* Adjust font size for better readability */\\n        margin-bottom: 5px;\\n    }\\n    \\n    .contact a {\\n        font-size: 14px;\\n        color: #fff; /* Ensure high contrast for the email link */\\n        text-decoration: none;\\n        word-break: break-word; /* Allow email to wrap if needed */\\n    }\\n    \\n    /* Newsletter Section */\\n    .newsletter-section {\\n        display: flex;\\n        flex-direction: column; /* Stack elements vertically */\\n        padding: 5px;\\n        text-align: left; /* Center-align text */\\n        gap: 10px; /* Add spacing between elements */\\n    }\\n    \\n    \\n    .newsletter-section h2 {\\n        font-size: 24px; /* Smaller heading for mobile */\\n        margin-bottom: 10px;\\n        text-align: left;\\n    }\\n    \\n    .newsletter-section form {\\n        display: flex;\\n        flex-direction: column; /* Stack form elements */\\n        align-items: left;\\n        width: 100%; /* Ensure form spans the section width */\\n        gap: 10px; /* Add spacing between input and button */\\n    }\\n    \\n    .newsletter-section input {\\n        width: 80%; /* Take most of the width for input */\\n        font-size: 12px; /* Adjust font size */\\n        padding: 10px; /* Add padding for touch-friendly inputs */\\n        border-radius: 25px; /* Keep rounded look */\\n        border: 1px solid #fff; /* Ensure visible border */\\n    }\\n    \\n    .newsletter-section button {\\n        width: 87%; /* Match input width */\\n        font-size: 12px; /* Adjust font size */\\n        padding: 8px; /* Add padding for touch-friendly button */\\n        border-radius: 25px; /* Keep rounded look */\\n        background-color: black; /* Ensure contrast */\\n        color: white;\\n        border: 1px solid #fff;\\n    }\\n    \\n    .newsletter-section button:hover {\\n        background-color: #fff;\\n        color: black;\\n    }\\n\\n    /* Book Section */\\n    .book-section {\\n        width: 90%;\\n        padding: 15px;\\n        background-color: #000;\\n    }\\n\\n    .book-section h2 {\\n        font-size: 24px;\\n        margin: 20px 0;\\n    }\\n\\n    .book-section input, .book-section textarea {\\n        font-size: 14px;\\n        padding: 8px;\\n    }\\n\\n    .book-section button {\\n        width: 100%; /* Full width button */\\n        font-size: 0.9rem;\\n    }\\n\\n    #form-message {\\n        font-size: 0.9rem;\\n    }\\n    .bottom-navbar {\\n        height: 40px; /* Reduce height for mobile */\\n        padding: 0 10px; /* Smaller padding */\\n        justify-content: space-between; /* Space out content */\\n    }\\n    \\n    /* Adjust trigger button for smaller viewports */\\n    .menu-trigger {\\n        width: 30px; /* Reduce size */\\n        height: 30px;\\n        bottom: 3px; /* Adjust placement */\\n        right: 10px;\\n    }\\n    \\n    .menu-trigger span {\\n        width: 17px; /* Reduce line length */\\n        height: 1.8px; /* Reduce line thickness */\\n    }\\n    \\n    /* Dropdown menu adjustments */\\n    .menu-content {\\n        bottom: 40px; /* Position it above the navbar */\\n        right: 45px; /* Align to the trigger */\\n        padding: 5px; /* Adjust padding */\\n        font-size: 14px; /* Smaller font size */\\n        max-width: 30%; /* Prevent dropdown from exceeding screen width */\\n    }\\n    \\n    .menu-content a {\\n        font-size: 14px !important;\\n        margin: 5px 0; /* Add spacing between links */\\n        text-align: center; /* Center-align text */\\n        text-decoration: none;\\n        color: #fff;\\n        transition: color 0.3s;\\n        font-weight: normal;\\n    }\\n    \\n    .menu-content a:hover {\\n        color: #ffcc00; /* Highlight on hover */\\n    }\\n    \\n    .p2 {\\n        font-size: 10px;\\n        text-align: left;\\n        position: absolute;\\n        left: 5px; /* Adjust this value to move it closer to the left edge */\\n        bottom: 13px;\\n    \\n    }\\n    /* Terms and Conditions */\\n\\n    .email-link {\\n        font-size: 1rem; /* Smaller font size for visibility */\\n    }\\n\\n    .terms-content {\\n        margin: 20px; /* Reduce margin for smaller screens */\\n        max-width: 100%; /* Use full width for better readability */\\n        line-height: 1.5; /* Slightly tighter line spacing */\\n        font-size: 14px; /* Smaller font size for mobile screens */\\n        text-align: justify; /* Align text to make it more visually pleasing */\\n    }\\n\\n    .terms-content h1 {\\n        font-size: 24px; /* Reduce size of main heading */\\n        margin-bottom: 15px;\\n    }\\n\\n    .terms-content h2 {\\n        font-size: 18px; /* Reduce size of subheadings */\\n        margin-top: 30px;\\n    }\\n\\n    .terms-content p {\\n        font-size: 14px; /* Adjust paragraph font size */\\n        margin-bottom: 15px; /* Reduce spacing between paragraphs */\\n    }\\n\\n\\n    @media (min-width: 768px) and (max-width: 1024px) {\\n        /* Adjusted CSS for tablet layout */\\n    \\n        /* Navbar */\\n        .navbar {\\n            display: flex;\\n            justify-content: space-between;\\n            padding: 0 20px;\\n        }\\n    \\n        /* Align \\\"Trip Agency\\\" and \\\"Book\\\" */\\n        .navbar .logo {\\n            margin-left: 10px;\\n        }\\n    \\n        .navbar .book-button {\\n            margin-right: 10px;\\n        }\\n    \\n        /* Details Section */\\n        .details-section {\\n            display: flex;\\n            flex-direction: row;\\n            gap: 20px;\\n            padding: 20px;\\n            max-width: 90%;\\n            margin: 0 auto;\\n        }\\n    \\n        .details-section .image-container img {\\n            width: 100%;\\n            height: auto;\\n            max-width: 50%;\\n            border-radius: 10px;\\n        }\\n    \\n        .details-section .details-block {\\n            flex: 1;\\n            font-size: 1rem;\\n            padding: 10px;\\n        }\\n    \\n        /* Adjusting grid alignment for details */\\n        .details-block .details-item {\\n            display: grid;\\n            grid-template-columns: 1fr 2fr;\\n            gap: 10px;\\n            padding: 5px 0;\\n        }\\n    \\n        .details-item .details-label {\\n            text-align: left;\\n            font-weight: bold;\\n        }\\n    \\n        .details-item .details-value {\\n            text-align: right;\\n        }\\n    }\\n    \\n    \\n    }\\n\\n\\n\\n\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./public/css/style.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHFCQUFxQjtBQUN6RTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qLyAvLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzogZml4IHR5cGVcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgIG1vZHVsZXMgPSBbXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGVzLFxuICAgICAgICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgICAgICBpZiAoZGVkdXBlKSB7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKXtcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcbiAgICAgICAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGxpc3Q7XG59O1xuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgXCJcIiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICA7XG4gICAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICAgIGlmICghY3NzTWFwcGluZykge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIGNvbnRlbnRcbiAgICBdLmpvaW4oXCJcXG5cIik7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./public/css/style.css":
/*!******************************!*\
  !*** ./public/css/style.css ***!
  \******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./style.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./public/css/style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./style.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./public/css/style.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./style.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./public/css/style.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvY3NzL3N0eWxlLmNzcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsdU5BQTJHO0FBQzdILDBCQUEwQixtQkFBTyxDQUFDLGlmQUFxUDs7QUFFdlI7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLElBQUksSUFBVTtBQUNkLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLGlmQUFxUDtBQUMzUDtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLGlmQUFxUDs7QUFFL1E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLFVBQVU7O0FBRTFCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxVQUFVO0FBQ1o7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcHVibGljL2Nzcy9zdHlsZS5jc3M/ODUwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTNdLnVzZVsxXSEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTNdLnVzZVsyXSEuL3N0eWxlLmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQnkgZGVmYXVsdCwgc3R5bGUtbG9hZGVyIGluamVjdHMgQ1NTIGludG8gdGhlIGJvdHRvbVxuICAgICAgICAgICAgICAgICAgICAvLyBvZiA8aGVhZD4uIFRoaXMgY2F1c2VzIG9yZGVyaW5nIHByb2JsZW1zIGJldHdlZW4gZGV2XG4gICAgICAgICAgICAgICAgICAgIC8vIGFuZCBwcm9kLiBUbyBmaXggdGhpcywgd2UgcmVuZGVyIGEgPG5vc2NyaXB0PiB0YWcgYXNcbiAgICAgICAgICAgICAgICAgICAgLy8gYW4gYW5jaG9yIGZvciB0aGUgc3R5bGVzIHRvIGJlIHBsYWNlZCBiZWZvcmUuIFRoZXNlXG4gICAgICAgICAgICAgICAgICAgIC8vIHN0eWxlcyB3aWxsIGJlIGFwcGxpZWQgX2JlZm9yZV8gPHN0eWxlIGpzeCBnbG9iYWw+LlxuICAgICAgICAgICAgICAgICAgICAvLyBUaGVzZSBlbGVtZW50cyBzaG91bGQgYWx3YXlzIGV4aXN0LiBJZiB0aGV5IGRvIG5vdCxcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBjb2RlIHNob3VsZCBmYWlsLlxuICAgICAgICAgICAgICAgICAgICB2YXIgYW5jaG9yRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjX19uZXh0X2Nzc19fRE9fTk9UX1VTRV9fXCIpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50Tm9kZSA9IGFuY2hvckVsZW1lbnQucGFyZW50Tm9kZS8vIE5vcm1hbGx5IDxoZWFkPlxuICAgICAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuICAgICAgICAgICAgICAgICAgICAvLyBhbmNob3IuIEJ5IGluc2VydGluZyBiZWZvcmUgYW5kIG5vdCBhZnRlciwgd2UgZG8gbm90XG4gICAgICAgICAgICAgICAgICAgIC8vIG5lZWQgdG8gdHJhY2sgdGhlIGxhc3QgaW5zZXJ0ZWQgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfTtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSwgYiwgaXNOYW1lZEV4cG9ydCkge1xuICAgIGlmICghYSAmJiBiIHx8IGEgJiYgIWIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgcDtcbiAgICBmb3IocCBpbiBhKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhW3BdICE9PSBiW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yKHAgaW4gYil7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWFbcF0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG4gICAgdmFyIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXG4gICAgICBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTNdLnVzZVsxXSEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTNdLnVzZVsyXSEuL3N0eWxlLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTNdLnVzZVsxXSEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTNdLnVzZVsyXSEuL3N0eWxlLmNzc1wiKTtcblxuICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFpc0VxdWFsTG9jYWxzKG9sZExvY2FscywgY29udGVudC5sb2NhbHMpKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgICAgICAgICAgICB1cGRhdGUoY29udGVudCk7XG4gICAgICB9XG4gICAgKVxuICB9XG5cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkge1xuICAgIHVwZGF0ZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/css/style.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MyApp; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _public_css_style_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../public/css/style.css */ \"./public/css/style.css\");\n/* harmony import */ var _public_css_style_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_public_css_style_css__WEBPACK_IMPORTED_MODULE_1__);\n\n // Update the path if needed\nfunction MyApp(param) {\n    let { Component, pageProps } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n        ...pageProps\n    }, void 0, false, {\n        fileName: \"/Users/nonterritorial/trip-agency/pages/_app.js\",\n        lineNumber: 4,\n        columnNumber: 12\n    }, this);\n}\n_c = MyApp;\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpQyxDQUFDLDRCQUE0QjtBQUUvQyxTQUFTQSxNQUFNLEtBQXdCO1FBQXhCLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFFLEdBQXhCO0lBQzFCLHFCQUFPLDhEQUFDRDtRQUFXLEdBQUdDLFNBQVM7Ozs7OztBQUNuQztLQUZ3QkYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvX2FwcC5qcz9lMGFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uL3B1YmxpYy9jc3Mvc3R5bGUuY3NzXCI7IC8vIFVwZGF0ZSB0aGUgcGF0aCBpZiBuZWVkZWRcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTXlBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSB7XG4gICAgcmV0dXJuIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz47XG59XG4iXSwibmFtZXMiOlsiTXlBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);